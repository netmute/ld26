//@ sourceMappingURL=ship.map
// Generated by CoffeeScript 1.6.1
(function() {
  var _this = this;

  ig.module('game.entities.ship').requires('plugins.steering-behaviors').defines(function() {
    return _this.EntityShip = SteeringBehaviorsEntity.extend({
      type: ig.Entity.TYPE.NONE,
      checkAgainst: ig.Entity.TYPE.NONE,
      collides: ig.Entity.COLLIDES.NEVER,
      size: {
        x: 16,
        y: 8
      },
      animSheet: new ig.AnimationSheet('media/destroyer.png', 16, 8),
      zIndex: 2,
      maxForce: 10,
      maxSpeed: 20,
      init: function(x, y, settings) {
        this.parent(x, y, settings);
        this.addAnim('idle', 1, [0]);
        if (this.ki) {
          this.kiTimer = new ig.Timer(4);
        }
        return ig.game.sortEntitiesDeferred();
      },
      update: function() {
        if (this.ki) {
          this.handleKI();
        }
        if (this.target && this.touches(this.target)) {
          this.target.kill();
          this.target = false;
        }
        this.currentAnim.angle = Math.atan2(this.vel.y, this.vel.x);
        if (this.target) {
          this.vArriveTo.set({
            x: this.target.pos.x + this.target.size.x / 2,
            y: this.target.pos.y + this.target.size.y / 2
          });
        }
        return this.parent();
      },
      handleKI: function() {
        var entities,
          _this = this;
        if (this.kiTimer.delta() > 0) {
          if (!this.target || this.target._killed) {
            entities = ig.game.getEntitiesByType(EntityPlanet).filter(function(planet) {
              return !planet.enemy;
            });
            entities.sort(function(a, b) {
              return _this.distanceTo(a) - _this.distanceTo(b);
            });
            this.target = entities[0];
            this.arriveActive = true;
          }
          return this.kiTimer.reset();
        }
      }
    });
  });

}).call(this);
